git clone https://github.com/Tahmurath/api_platform_3_4.git


docker compose build --no-cache


docker compose up --wait

docker compose logs -f

#docker compose exec php bin/console make:entity --api-resource

docker compose exec php bin/console doctrine:migrations:diff
docker compose exec php bin/console doctrine:migrations:migrate
docker compose exec pwa pnpm create @api-platform/client

docker compose exec php composer require symfony/runtime

psql -d app -U app -W
!ChangeMe!
truncate table "user";

truncate table "company";

    set -e
    apt-get install openssl
    php bin/console lexik:jwt:generate-keypair
    setfacl -R -m u:www-data:rX -m u:"$(whoami)":rwX config/jwt
    setfacl -dR -m u:www-data:rX -m u:"$(whoami)":rwX config/jwt

bin/console make:voter


php bin/console doctrine:database:drop --force
php bin/console doctrine:database:create
php bin/console doctrine:migrations:migrate


curl -k -X 'POST' 'https://localhost/companies' -H 'accept: application/ld+json' -H 'Content-Type: application/ld+json' -d '{
  "name": "Company"
}'

curl -k -X 'POST' 'https://localhost/users'  -H 'accept: application/ld+json' -H 'Content-Type: application/ld+json' -d '{
  "email":"dddd@123456.com","password":"dddd@123456.com","plainPassword":"dddd@123456.com","role":"ROLE_USER","name":"Dfdsdsdfsdf","company":"/companies/1"
}'

curl -k -X 'POST' 'https://localhost/auth' -H 'accept: application/json' -H 'Content-Type: application/json' -d '{
  "email": "123457@123456.com",
  "password": "123456@123456.com"
}'

curl -k -X 'GET' 'https://localhost/users?page=1' -H 'accept: application/ld+json'



curl -k -X 'GET' 'https://localhost/users?page=1' -H 'accept: application/ld+json' -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MzAyMDY5NDUsImV4cCI6MTczMDIxMDU0NSwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoiZWVlZWVAc2Rmc2RmLmNvbSJ9.z6_hNoS8l-vEFzpxnt6WlTgnWGsA9vBBrqdvdxtm3fDiteZz7xcRzujnDU-8jgCLz9Dz1o3ox76v6-79mwhDCN-UNiwW8VlDWIYUleSrrX4OJfbhJiVCCEzW7dUDyKde5nPbj2cZJqBFNr9fy5qFotiQykN5y6V9XRCVlrArTIbqKt7HzQaIE3Jh1oyvUXiJ4BPFEE70RQQ3O7JdYYnRq3jgZd_NVXzCMHsGFqQfCHYbh7Y3EEONSyyL5_T6POXmgkhSPByb_0fbLux-Y5K_-xgOlFbYUunkbKDlhEzJ0L0FsT-gQ0xtYEnhZmqI30xxt1c49syD4L9tIbyAmUONPw'


docker compose exec php composer require symfony/browser-kit symfony/http-client




sudo docker compose exec php bin/console doctrine:database:create --env=test

sudo docker compose exec php bin/console doctrine:migrations:migrate --env=test
sudo docker compose exec php bin/phpunit




- API only application (API Platform v3)
- Use PostgreSQL database and Doctrine
- Entities can have only properties as described below
- API resources can have only operations as described below
- Three roles:
    - ROLE_USER (default)
    - ROLE_COMPANY_ADMIN (manages users in their company)
    - ROLE_SUPER_ADMIN (manages all users, should have an option to impersonate any user)
- Two entities:
    - User
        - id (int, automatically assigned on creation, cannot be changed after setting up)
        - name (required, string, max 100 characters, min 3 charaters, requires letters and space only, one uppercase letter required)
        - role (required, string, choice between ROLE_USER, ROLE_COMPANY_ADMIN, and ROLE_SUPER_ADMIN
        - role USER cannot change it, role COMPANY ADMIN can only set USER role)
        - company (relation to the Company entity, required for USER and COMPANY ADMIN roles, SUPER ADMIN cannot have company)
    - Company
        - id (int, automatically assigned on creation)
        - name (required, string, max 100 characters, min 5 charaters, must be unique in the database)


- These entities should be available as API resources with conditions:
    - User:
        - operations:
            - GET /users, GET /users/{id} - available for all roles,
    USER and COMPANY ADMIN can see only users from their company, SUPER ADMIN can see all users
            - POST /users - available for SUPERADMIN and COMPANY ADMIN
            - DELETE /users/{id} - available for SUPERADMIN only
    - Company:
        - operations:
            - GET /companies, GET /companies/{id} - available for all roles
            - POST /companies - available for SUPERADMIN only -
            All endpoints and logic should be tested - All validation constraints should be tested
